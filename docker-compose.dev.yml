# Ports are exposed in development mode only.
# Can use NGINX or other proxy in production to hide private ports.
services:
  #Postgre SQL database
  postgres:
    image: postgres:15-alpine
    container_name: property_management_postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]  # Use env var here
      interval: 5s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: property_management_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"  # Access pgAdmin on localhost:5050
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  
  # Server or Backend
  server:
    build: ./server
    container_name: property-management-server
    env_file:
      - .env
    ports:
      - "3001:3001"  # Adjust based on your server port
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/node_modules
    develop:  # For better development experience
      watch:
        - path: ./server
          action: sync
          target: /app
        - path: ./server/package.json
          action: rebuild
  
volumes:
  postgres_data:
  pgadmin_data: